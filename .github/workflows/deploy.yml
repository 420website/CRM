name: Deploy to Production   

on:
  push: 
    branches: 
      - main
  # workflow_run:
  #   workflows: ["run-tests"]
  #   types: [completed]


jobs:
  deploy:
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Deploy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.PRODUCTION_IP  }}
          username: ${{ secrets.PRODUCTION_USERNAME  }}
          key: ${{ secrets.PRODUCTION_KEY_PRIVATE  }}
          port: ${{  secrets.PRODUCTION_PORT  }}
          script: |
            whoami 

            REPO_DIR="$HOME/crm"
            REPO_URL="git@github.com:420website/crm.git"

            # Clone the repo if it doesn't exist
            if [ ! -d "$REPO_DIR/.git" ]; then
                echo "Repo not found, cloning..."
                git clone "$REPO_URL" "$REPO_DIR"
                cd "$REPO_DIR"
            else
                echo "Repo found, pulling latest changes..."
                cd "$REPO_DIR"
                git pull origin main 
            fi

            # Import application/ TLS envrionment varibles
            cat > .env << 'EOF'
            # Backend 
            SUPPORT_EMAIL=${{ secrets.SUPPORT_EMAIL }} 
            SMTP_SERVER=${{ secrets.SMTP_SERVER }}
            SMTP_PORT=${{ secrets.SMTP_PORT }}
            SMTP_USERNAME=${{ secrets.SMTP_USERNAME }}
            SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}

            # Frontend 
            REACT_APP_BACKEND_URL=${{ secrets. REACT_APP_BACKEND_URL }}
            REACT_APP_GOOGLE_PLACES_API_KEY=${{ secrets.REACT_APP_GOOGLE_PLACES_API_KEY }}

            # Database 
            MONGO_URL=${{ secrets.MONGO_URL }}
            DB_NAME=${{ secrets.DB_NAME }}
            DB_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}
            DB_HOST=${{ secrets.DB_HOST }} 
            DB_PORT=${{ secrets.DB_PORT }}

            # Nginx
            DOMAIN_ROOT=${{ secrets.DOMAIN_ROOT }}
            DOMAIN_NAME=${{ secrets.DOMAIN_NAME }}
            SSL_CERT=${{ secrets.SSL_CERT }}
            SSL_CERT_KEY=${{secrets.SSL_CERT_KEY }}
            CERTBOT_EMAIL=${{ secrets.CERTBOT_EMAIL }}
            CERTBOT_CONTAINER=${{ secrets.CERTBOT_CONTAINER }}
            CERTBOT_VOLUME=${{ secrets.CERTBOT_VOLUME }}

            EOF

            # Make deploy script executable and run it
            chmod +x ./scripts/deploy.sh 
            ./scripts/deploy.sh
